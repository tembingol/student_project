"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.authRouter = void 0;
const express_1 = require("express");
const auth_validators_1 = require("./middlewares/auth-validators");
const refreshToken_validator_1 = require("./middlewares/refreshToken-validator");
const sessions_middleware_1 = require("../../global-middlewares/sessions-middleware");
const accessToken_validator_1 = require("./middlewares/accessToken-validator");
const auth_controller_1 = require("./auth-controller");
const composition_root_1 = require("../../composition-root");
exports.authRouter = (0, express_1.Router)({});
const authController = composition_root_1.container.get(auth_controller_1.AuthController);
exports.authRouter.post('/registration', sessions_middleware_1.incomingRequestsCheckMiddleware, ...auth_validators_1.authRegistrationValidators, authController.registration.bind(authController));
exports.authRouter.post('/registration-confirmation', sessions_middleware_1.incomingRequestsCheckMiddleware, authController.registrationConfirmation.bind(authController));
exports.authRouter.post('/registration-email-resending', sessions_middleware_1.incomingRequestsCheckMiddleware, authController.registrationEmailResending.bind(authController));
exports.authRouter.post('/login', sessions_middleware_1.incomingRequestsCheckMiddleware, ...auth_validators_1.authLoginValidators, authController.login.bind(authController));
exports.authRouter.post('/logout', authController.logout.bind(authController));
exports.authRouter.post('/refresh-token', refreshToken_validator_1.refteshTokenValidator, authController.refreshTokens.bind(authController));
exports.authRouter.get('/login/me', accessToken_validator_1.accessTokenValidator, authController.getMe.bind(authController));
exports.authRouter.get('/me', accessToken_validator_1.accessTokenValidator, authController.getMe.bind(authController));
exports.authRouter.post('/password-recovery', sessions_middleware_1.incomingRequestsCheckMiddleware, authController.passwordRecovery.bind(authController));
exports.authRouter.post('/new-password', sessions_middleware_1.incomingRequestsCheckMiddleware, auth_validators_1.authNewPasswordValidators, authController.setNewPassword.bind(authController));
